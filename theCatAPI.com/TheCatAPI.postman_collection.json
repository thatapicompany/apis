{
	"info": {
		"_postman_id": "1ca5291b-05bc-4a7f-9bc5-13e699641cfb",
		"name": "The Cat API",
		"description": "![image](https://cdn2.thecatapi.com/logos/thecatapi_256xW.png)\n\n## An open, free, read & write API all about Cats\nThe Cat API gives you access to 10000's of cat images\n- Upload your own images\n- Favourite or Vote on images\n- Get stats on your requests\n- Save a custom value with each request for each of your users\n\n## How is this free?\nMy goal is to create free, fun & useful public service API's, helping people learn to code, create awesome projects, and be a stable fixture in a turbulent world.\n\n## How do i get access?\nJust signup for an API Key from https://theCatAPI.com for free. I'm looking forward to seeing what you make!",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5578104"
	},
	"item": [
		{
			"name": "Images",
			"item": [
				{
					"name": "/images/search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should be okay to process\", function () { ",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"pm.test('10 images', function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.length).to.equal(10); ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[optional] without it only the a basic set of images can be searched"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/images/search?breed_ids=beng&include_breeds=true",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								"search"
							],
							"query": [
								{
									"key": "size",
									"value": "full",
									"description": "[optional] thumb , small, med or full - small is perfect for Discord",
									"disabled": true
								},
								{
									"key": "mime_types",
									"value": "jpg,png,gif",
									"description": "[optional] a comma separated strig of types to return e.g. jpg,png for static, or gif for gifs",
									"disabled": true
								},
								{
									"key": "format",
									"value": "json",
									"description": "[optional] json | src",
									"disabled": true
								},
								{
									"key": "order",
									"value": "RANDOM",
									"description": "[optional] default:RANDOM - RANDOM | ASC | DESC",
									"disabled": true
								},
								{
									"key": "page",
									"value": "0",
									"description": "[optional] paginate through results",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"description": "[optional] number of results to return, up to 25 with a valid API-Key",
									"disabled": true
								},
								{
									"key": "category_ids",
									"value": null,
									"description": "[optional] category ids from /categories route",
									"disabled": true
								},
								{
									"key": "breed_ids",
									"value": "beng",
									"description": "[optional] breed ids from /breeds route"
								},
								{
									"key": "has_breeds",
									"value": "true",
									"description": "[optional] true/false - only return images that have at least 1 breed",
									"disabled": true
								},
								{
									"key": "include_breeds",
									"value": "true",
									"description": "[optional] true/false - Include the 'breeds' array - default true"
								},
								{
									"key": "include_categories",
									"value": "true",
									"description": "[optional] true/false - Include the 'categories' array - default true",
									"disabled": true
								}
							]
						},
						"description": "#### Route\n\nhttps://api.thecatapi.com/v1/images/search\n\nSearch & Itterate through all approved images.\n\n\n#### Query Parameters\n\n| Key  | Required | Description                                                                                     |\n|------|----------|-------------------------------------------------------------------------------------------------|\n| size | optional | The size of image to return - `small`, `med` or `full`. `small` is perfect for Discord. Defaults to `med`\n| mime_types | optional | Comma delimited string of the image types to return `gif`, `jpg`, or`png`. Defaults to return all types `jpg,gif,png`.                                                    |\n| format | optional | Response format `json`, or`src`. `src` will redirect straight to the image, so is useful for putting a link straight into HTML as the 'src' on an 'img' tag. Defaults to `json`                            |\n| order | optional | The order to return results in. `RANDOM`, `ASC` or `DESC`. If either `ASC` or `DESC` is passed then the Pagination headers will be on the response allowing you to see the total amount of results, and your current page. Default is `RANDOM`                      |\n| page | optional | Integer - used for Paginating through all the results. Only used when order is `ASC` or `DESC`                      |\n| limit | optional | Integer - number of results to return. Without an API Key you can only pass `1`, with a Key you can pass up to `25`. Default is `1`                      |\n| category_ids | optional | Comma delimited string of integers, matching the `id`'s of the Categories to filter the search. These categories can found in the `/v1/categories` request. e.g. category_ids=2                      |\n| breed_ids | optional | Comma delimited string of integers, matching the `id`'s of the Breeds to filter the search. These categories can found in the `/v1/breeds` request                      |\n| has_breeds | optional | Only return images which have breed data attached. Integer - `0` or `1`. Default is `0`                        |\n\n#### Pagination\nIf order=ASC or order=DESC is passed, then the response will contain these values as Headers\n\n| Key  | Description                                                                                     |\n|------|-------------------------------------------------------------------------------------------------|\n| Pagination-Count | Integer - the total amount of results matching your search|\n| Pagination-Page  | Integer - the current page\n| Pagination-Limit | Integer - amount of results being returned per page\n|"
					},
					"response": [
						{
							"name": "/images/search - 10 random images",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{YOUR-API-KEY}}",
										"description": "[optional] without it only the a basic set of images can be searched"
									}
								],
								"url": {
									"raw": "{{endpoint}}v1/images/search?format=json&limit=10",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"images",
										"search"
									],
									"query": [
										{
											"key": "size",
											"value": "full",
											"description": "[optional] thumb , small, med or full - small is perfect for Discord",
											"disabled": true
										},
										{
											"key": "mime_types",
											"value": "jpg,png,gif",
											"description": "[optional] a comma separated strig of types to return e.g. jpg,png for static, or gif for gifs",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"description": "[optional] json | src"
										},
										{
											"key": "order",
											"value": "RANDOM",
											"description": "[optional] default:RANDOM - RANDOM | ASC | DESC",
											"disabled": true
										},
										{
											"key": "page",
											"value": "0",
											"description": "[optional] paginate through results",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"description": "[optional] number of results to return, up to 25 with a valid API-Key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 03 Nov 2018 05:47:06 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Expires",
									"value": "Tue, 03 Jul 2001 06:00:00 GMT"
								},
								{
									"key": "Last-Modified",
									"value": "Sat Nov 03 2018 05:47:06 GMT+0000 (UTC)"
								},
								{
									"key": "Cache-Control",
									"value": "post-check=0, pre-check=0"
								},
								{
									"key": "Pagination-Count",
									"value": "20713"
								},
								{
									"key": "Pagination-Page",
									"value": "0"
								},
								{
									"key": "Pagination-Limit",
									"value": "10"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Pagination-Count, Pagination-Page, Pagination-Limit"
								},
								{
									"key": "X-Response-Time",
									"value": "68ms"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"breeds\": [],\n        \"categories\": [],\n        \"id\": \"e3c\",\n        \"url\": \"https://25.media.tumblr.com/tumblr_m1yuqjfdy31qejbiro1_500.jpg\"\n    },\n    {\n        \"breeds\": [],\n        \"categories\": [],\n        \"id\": \"2kj\",\n        \"url\": \"https://25.media.tumblr.com/tumblr_m2frwgKzN01r6b7kmo1_500.jpg\"\n    },\n    {\n        \"breeds\": [],\n        \"categories\": [],\n        \"id\": \"MTYzMjIxMA\",\n        \"url\": \"https://25.media.tumblr.com/tumblr_maklk6AJiw1qhwmnpo1_400.jpg\"\n    },\n    {\n        \"breeds\": [],\n        \"categories\": [],\n        \"id\": \"ckk\",\n        \"url\": \"https://cdn2.thecatapi.com/images/ckk.gif\"\n    },\n    {\n        \"breeds\": [],\n        \"categories\": [],\n        \"id\": \"ea7\",\n        \"url\": \"https://25.media.tumblr.com/tumblr_m4qyhzpZts1qcxyrro1_500.jpg\"\n    },\n    {\n        \"breeds\": [],\n        \"categories\": [],\n        \"id\": \"4m5\",\n        \"url\": \"https://25.media.tumblr.com/tumblr_m44w9nI50Y1qzyqubo1_500.jpg\"\n    },\n    {\n        \"breeds\": [],\n        \"categories\": [],\n        \"id\": \"fb\",\n        \"url\": \"https://25.media.tumblr.com/tumblr_luihyxjWY51qzqffro1_500.jpg\"\n    },\n    {\n        \"breeds\": [],\n        \"categories\": [],\n        \"id\": \"MTg5NzY0OQ\",\n        \"url\": \"https://24.media.tumblr.com/tumblr_m87t24YOrf1qze0hyo1_500.jpg\"\n    },\n    {\n        \"breeds\": [],\n        \"categories\": [],\n        \"id\": \"bmf\",\n        \"url\": \"https://24.media.tumblr.com/tumblr_ltq345HHij1qh9eixo1_500.png\"\n    },\n    {\n        \"breeds\": [],\n        \"categories\": [],\n        \"id\": \"88n\",\n        \"url\": \"https://cdn2.thecatapi.com/images/88n.gif\"\n    }\n]"
						},
						{
							"name": "/images/search",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{YOUR-API-KEY}}",
										"description": "[optional] without it only the a basic set of images can be searched"
									}
								],
								"url": {
									"raw": "{{endpoint}}v1/images/search?format=json",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"images",
										"search"
									],
									"query": [
										{
											"key": "size",
											"value": "med",
											"description": "[optional] thumb , small, med or full - small is perfect for Discord",
											"disabled": true
										},
										{
											"key": "mime_types",
											"value": "jpg",
											"description": "[optional] a comma separated strig of types to return e.g. jpg,png for static, or gif for gifs",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"description": "[optional] json | src"
										},
										{
											"key": "has_breeds",
											"value": "false",
											"description": "[optional] - only return images with breed data",
											"disabled": true
										},
										{
											"key": "order",
											"value": "RANDOM",
											"description": "[optional] default:RANDOM - RANDOM | ASC | DESC",
											"disabled": true
										},
										{
											"key": "page",
											"value": "0",
											"description": "[optional] paginate through results",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "1",
											"description": "[optional] number of results to return, up to 25 with a valid API-Key",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 26 Aug 2018 06:36:16 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "Tue, 03 Jul 2001 06:00:00 GMT",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Last-Modified",
									"value": "Sun Aug 26 2018 06:36:16 GMT+0000 (UTC)",
									"name": "Last-Modified",
									"description": "The last modified date for the requested object, in RFC 2822 format"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Origin",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off",
									"name": "X-DNS-Prefetch-Control",
									"description": "Custom header"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen",
									"name": "X-Download-Options",
									"description": "Custom header"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-Response-Time",
									"value": "41ms",
									"name": "X-Response-Time",
									"description": "Custom header"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "[{\"id\":\"3fg\",\"url\":\"https://25.media.tumblr.com/tumblr_lqik92AS4I1qfy8klo1_500.jpg\",\"breeds\":[],\"categories\":[]}]"
						}
					]
				},
				{
					"name": "/images/:image_id - (Individual Image)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"  var jsonData = pm.response.json();",
									"  ",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should be okay to process\", function () { ",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"pm.test('Object response', function() {",
									"  pm.expect(jsonData.id).to.equal('MjAzMDMwMg'); ",
									"  pm.expect(jsonData.url).to.equal(\"https://cdn2.thecatapi.com/images/MjAzMDMwMg.jpg\"); ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[optional]  will save this request to your account analytics\n"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/images/:image_id?sub_id&size&include_vote=&include_favourite",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								":image_id"
							],
							"query": [
								{
									"key": "sub_id",
									"value": null,
									"description": "[optional] if you want to save this request to your account stats"
								},
								{
									"key": "size",
									"value": null,
									"description": "[optional] thumb , small, med or full - small is perfect for Discord"
								},
								{
									"key": "include_vote",
									"value": "",
									"description": "[optional] include the last Vote for the Image from your account & sub_id"
								},
								{
									"key": "include_favourite",
									"value": null,
									"description": "[optional] include the Favourite for the Image from your account & sub_id"
								}
							],
							"variable": [
								{
									"key": "image_id",
									"value": "MjAzMDMwMg",
									"description": "The id of the image to get"
								}
							]
						},
						"description": "#### Route\n\nhttps://api.thecatapi.com/v1/images/:image_id"
					},
					"response": [
						{
							"name": "/images/:image_id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}v1/images/BkIEhN3pG",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"images",
										"BkIEhN3pG"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "158",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 13 May 2018 11:59:07 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Vary",
									"value": "Origin",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "X-Response-Time",
									"value": "71ms",
									"name": "X-Response-Time",
									"description": "Custom header"
								}
							],
							"cookie": [],
							"body": "{\"id\":\"BkIEhN3pG\",\"url\":\"\",\"width\":912,\"height\":1024,\"mime_type\":\"image/jpeg\",\"breeds\":[{\"id\":10,\"name\":\"American Bulldog\"}],\"categories\":[],\"breed_ids\":\"10\"}"
						}
					]
				},
				{
					"name": "/images/ (Your uploads)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required] - will return all the images from your account\n"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/images/?limit=10&page=0&order=DESC&sub_id=user1&breed_ids=1,4,28&category_ids=4&format=json&original_filename=",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								""
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "[Optional] number of images to return valid  1 to 10 - default: 1"
								},
								{
									"key": "page",
									"value": "0",
									"description": "[Optional] only works if account_id is present to page through your own uploads"
								},
								{
									"key": "order",
									"value": "DESC",
									"description": "[Optional] only works if account_id is present, either ASC or DESC - ascending or descending."
								},
								{
									"key": "sub_id",
									"value": "user1",
									"description": "[Optional] If you want to "
								},
								{
									"key": "breed_ids",
									"value": "1,4,28",
									"description": "[Optional] Id's of the breeds to filter by"
								},
								{
									"key": "category_ids",
									"value": "4",
									"description": "[Optional] Id's of the categories to filter by"
								},
								{
									"key": "format",
									"value": "json",
									"description": "[Optional] default is 'json', pass 'src' to redirect the request to the image's url - this is useful for setting the 'src' of an <img> tag."
								},
								{
									"key": "original_filename",
									"value": "",
									"description": "[Optional] filter to files you uploaded with the same name"
								}
							]
						},
						"description": "Returns the images from your account you uploaded via `/v1/images/upload`\n\n\n#### Route\n\nhttps://api.thecatapi.com/v1/images/\n\n\n#### Pagination\nIf order=ASC or order=DESC is passed, then the response will contain these values as Headers\n\n| Key  | Description                                                                                     |\n|------|-------------------------------------------------------------------------------------------------|\n| Pagination-Count | Integer - the total amount of results matching your search|\n| Pagination-Page  | Integer - the current page\n| Pagination-Limit | Integer - amount of results being returned per page\n|"
					},
					"response": [
						{
							"name": "/images/",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}/api/v1/images/?limit=10",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v1",
										"images",
										""
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "2495",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Wed, 11 Apr 2018 12:37:55 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-response-time",
									"value": "110ms",
									"name": "x-response-time",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[{\"id\":\"S1bsCGxrf\",\"url\":\"http://78.media.tumblr.com/2bc94b9eec2d00f5d28110ba191da896/tumblr_nyled8DYKd1qg9kado1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[{\"id\":3,\"name\":\"Alaskan Malamute\",\"wikipedia_url\":\"https://en.wikipedia.org/wiki/Alaskan_Malamute\"},{\"id\":2,\"name\":\"Akita\",\"wikipedia_url\":\"https://en.wikipedia.org/wiki/Akita_(dog)\"}],\"animals\":[],\"categories\":[]},{\"id\":\"B1gZsCMgrG\",\"url\":\"http://78.media.tumblr.com/75f7f5ba97da53c61026fe6cad16c97c/tumblr_o8h7llrbDt1rzz2who1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"HJZWiCGgSf\",\"url\":\"http://78.media.tumblr.com/84f729a7130860dda9b7544664a36094/tumblr_nvgiskSmew1un7zabo3_r1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"HyGWiRfgBM\",\"url\":\"http://78.media.tumblr.com/6fb13a48907b7d65f79a07afdc9c5ebe/tumblr_nhlytoREfQ1rvsh0oo1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"Bk4-oAzlHM\",\"url\":\"http://78.media.tumblr.com/4217786db510db68daed375cea8ec4d9/tumblr_nlf1ggSff71ruv93po1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"H1HWiCMxHG\",\"url\":\"http://78.media.tumblr.com/a9c056e66b11e1a91a9a03d8c0d04e89/tumblr_o7uwyquvpM1qjcdw9o1_1280.png\",\"width\":null,\"height\":null,\"mime_type\":\"image/png\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"rkUZsAGeHM\",\"url\":\"http://78.media.tumblr.com/9666e3107587fa2dd7833033ec42b7ba/tumblr_o0ymimYfp71rozzl0o1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"BkDZjRzlSz\",\"url\":\"http://78.media.tumblr.com/9b5ed3d0bcd102bb028f137267082777/tumblr_o6zaks1SvQ1qjcdw9o1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"ByuZj0GgBf\",\"url\":\"http://78.media.tumblr.com/766f297cf8b282cd2820fc4c9161c328/tumblr_o7hktkxin01qjcdw9o1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"r1tWjAfxHz\",\"url\":\"http://78.media.tumblr.com/5230380780945425e867a0a3aaa6f4b0/tumblr_n8w47dGOhd1r7qbtpo1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]}]"
						},
						{
							"name": "/images/",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "ab5ffdb3-b8f2-4159-9706-990ccc46b1b3",
										"description": "[Optional] "
									}
								],
								"url": {
									"raw": "{{endpoint}}v1/images/?limit=10&page=0&order=DESC",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"images",
										""
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "[Optional] number of images to return valid  1 to 10 - default: 1"
										},
										{
											"key": "page",
											"value": "0",
											"description": "[Optional] only works if account_id is present to page through your own uploads"
										},
										{
											"key": "order",
											"value": "DESC",
											"description": "[Optional] only works if account_id is present, either ASC or DESC - ascending or descending."
										},
										{
											"key": "sub_id",
											"value": "user1",
											"description": "[Optional] If you want to ",
											"disabled": true
										},
										{
											"key": "breed_ids",
											"value": "1,4,28",
											"description": "[Optional] Id's of the breeds to filter by",
											"disabled": true
										},
										{
											"key": "category_ids",
											"value": "4",
											"description": "[Optional] Id's of the categories to filter by",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"description": "[Optional] default is 'json', pass 'src' to redirect the request to the image's url - this is useful for setting the 'src' of an <img> tag.",
											"disabled": true
										},
										{
											"key": "original_filename",
											"value": null,
											"description": "[Optiona] filter to files you uploaded with the same name",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "3031",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 13 May 2018 12:24:57 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Vary",
									"value": "Origin",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "X-Response-Time",
									"value": "162ms",
									"name": "X-Response-Time",
									"description": "Custom header"
								}
							],
							"cookie": [],
							"body": "[{\"id\":\"SJ6YQ-mRf\",\"url\":\"http://cdn1.thedogapi.com/images/SJ6YQ-mRf.gif\",\"width\":330,\"height\":186,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p7pc03uDYD1vb46leo1_400.gif\",\"created_at\":\"2018-05-11T01:50:29.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p7pc03uDYD1vb46leo1_400.gif\"},{\"id\":\"r1EP7WmRM\",\"url\":\"http://cdn1.thedogapi.com/images/r1EP7WmRM.gif\",\"width\":344,\"height\":344,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p7et7dDbvt1vb46leo1_400.gif\",\"created_at\":\"2018-05-11T01:49:48.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p7et7dDbvt1vb46leo1_400.gif\"},{\"id\":\"SJ9Nm-m0z\",\"url\":\"http://cdn1.thedogapi.com/images/SJ9Nm-m0z.gif\",\"width\":323,\"height\":323,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p7anz8xrxY1vb46leo1_400.gif\",\"created_at\":\"2018-05-11T01:49:06.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p7anz8xrxY1vb46leo1_400.gif\"},{\"id\":\"HkWzmb7RG\",\"url\":\"http://cdn1.thedogapi.com/images/HkWzmb7RG.gif\",\"width\":402,\"height\":402,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p66rh3yOQZ1vb46leo1_500.gif\",\"created_at\":\"2018-05-11T01:48:24.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p66rh3yOQZ1vb46leo1_500.gif\"},{\"id\":\"BJNJ7-XCM\",\"url\":\"http://cdn1.thedogapi.com/images/BJNJ7-XCM.gif\",\"width\":328,\"height\":340,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p5x7l8Npvd1vb46leo1_400.gif\",\"created_at\":\"2018-05-11T01:47:40.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p5x7l8Npvd1vb46leo1_400.gif\"},{\"id\":\"Byd3G-7Cz\",\"url\":\"http://cdn1.thedogapi.com/images/Byd3G-7Cz.gif\",\"width\":295,\"height\":275,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p5bw97ms4S1tlb56zo1_400.gif\",\"created_at\":\"2018-05-11T01:46:55.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p5bw97ms4S1tlb56zo1_400.gif\"},{\"id\":\"SyhKGWXRz\",\"url\":\"http://cdn1.thedogapi.com/images/SyhKGWXRz.gif\",\"width\":240,\"height\":300,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p4v52oRLhQ1tlb56zo1_250.gif\",\"created_at\":\"2018-05-11T01:46:11.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p4v52oRLhQ1tlb56zo1_250.gif\"},{\"id\":\"BJWwzW7Rz\",\"url\":\"http://cdn1.thedogapi.com/images/BJWwzW7Rz.gif\",\"width\":400,\"height\":442,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p4ue73GTqE1ry46hlo1_400.gif\",\"created_at\":\"2018-05-11T01:45:29.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p4ue73GTqE1ry46hlo1_400.gif\"},{\"id\":\"ryrVzZ7RM\",\"url\":\"http://cdn1.thedogapi.com/images/ryrVzZ7RM.gif\",\"width\":350,\"height\":197,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_ou6lq9N06K1vb46leo1_400.gif\",\"created_at\":\"2018-05-11T01:44:45.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_ou6lq9N06K1vb46leo1_400.gif\"},{\"id\":\"r1F-fZQCf\",\"url\":\"http://cdn1.thedogapi.com/images/r1F-fZQCf.gif\",\"width\":460,\"height\":263,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_otdzzy1qvE1vnq1cro2_500.gif\",\"created_at\":\"2018-05-11T01:44:00.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_otdzzy1qvE1vnq1cro2_500.gif\"}]"
						}
					]
				},
				{
					"name": "/images/upload",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required] - saves the uploaded image to your account."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "File on your local machine",
									"type": "file",
									"src": "/Users/aden/Dropbox/ThatAPIPlatform/theCatAPI-service/test-images/tumblr_luij7yisUy1r4xjo2o1_r1_1280.jpg"
								},
								{
									"key": "sub_id",
									"value": "",
									"description": "[optional] - a string you can use to segment your images, e.g. knowing which of your own users uploaded it.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{endpoint}}v1/images/upload",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								"upload"
							]
						},
						"description": "#### Route\n\nhttps://api.thecatapi.com/v1/images/upload\n\nUpload your own Cat pictures. Anything that doesn't contain a cat, or contains anything inappropriate will be rejected.\n\n"
					},
					"response": [
						{
							"name": "/images/upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "x-api-key",
										"value": "{{YOUR-API-KEY}}",
										"description": "[required] - saves the uplaoded image to your account."
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										},
										{
											"key": "sub_id",
											"value": "",
											"description": "[optional] - a string you can use to segment your images, e.g. knowing which of your own users uploaded it.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{endpoint}}v1/images/upload",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"images",
										"upload"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 08 Nov 2018 10:12:33 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "X-Response-Time",
									"value": "3605ms"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"9ccXTANkb\",\n    \"url\": \"https://cdn2.thecatapi.com/images/9ccXTANkb.jpg\",\n    \"pending\": 0,\n    \"approved\": 1\n}"
						}
					]
				},
				{
					"name": "/images/upload2 for testing theImageAPI integration",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required] - saves the uplaoded image to your account."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "File on your local machine",
									"type": "file",
									"src": "/Users/aden/Dropbox/ThatAPIPlatform/theCatAPI-service/test-images/tumblr_luij7yisUy1r4xjo2o1_r1_1280.jpg"
								},
								{
									"key": "sub_id",
									"value": "",
									"description": "[optional] - a string you can use to segment your images, e.g. knowing which of your own users uploaded it.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{endpoint}}v1/images/upload2",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								"upload2"
							]
						},
						"description": "#### Route\n\nhttps://api.thecatapi.com/v1/images/upload\n\nUpload your own Cat pictures. Anything that doesn't contain a cat, or contains anything inappropriate will be rejected.\n\n"
					},
					"response": [
						{
							"name": "/images/upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "x-api-key",
										"value": "{{YOUR-API-KEY}}",
										"description": "[required] - saves the uplaoded image to your account."
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										},
										{
											"key": "sub_id",
											"value": "",
											"description": "[optional] - a string you can use to segment your images, e.g. knowing which of your own users uploaded it.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{endpoint}}v1/images/upload",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"images",
										"upload"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 08 Nov 2018 10:12:33 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "X-Response-Time",
									"value": "3605ms"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"9ccXTANkb\",\n    \"url\": \"https://cdn2.thecatapi.com/images/9ccXTANkb.jpg\",\n    \"pending\": 0,\n    \"approved\": 1\n}"
						}
					]
				},
				{
					"name": "/images/:image_id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "example-api-key-for-your-account"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/images/:image_id",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								":image_id"
							],
							"variable": [
								{
									"key": "image_id",
									"value": "{{image_id}}",
									"description": "The id of the image to delete"
								}
							]
						},
						"description": "Delete any image you uploaded."
					},
					"response": []
				},
				{
					"name": "/images/:image_id/analysis",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "x-"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/images/:image_id/analysis",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								":image_id",
								"analysis"
							],
							"variable": [
								{
									"key": "image_id",
									"value": "9ccXTANkb",
									"description": "Id of the image to return any analysis performed on it during upload."
								}
							]
						},
						"description": "Get the analysis of any images you uploaded.\n\nWarning: the response format will change in the future as the Analysis engine improves."
					},
					"response": [
						{
							"name": "/images/:image_id/analysis",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "x-"
									},
									{
										"key": "x-api-key",
										"value": "{{YOUR-API-KEY}}"
									}
								],
								"url": {
									"raw": "{{endpoint}}v1/images/:image_id/analysis",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"images",
										":image_id",
										"analysis"
									],
									"variable": [
										{
											"key": "image_id",
											"value": "9ccXTANkb"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 08 Nov 2018 10:17:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "X-Response-Time",
									"value": "3ms"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"labels\": \"[{\\\"Name\\\":\\\"Pet\\\",\\\"Confidence\\\":98.60120391845703},{\\\"Name\\\":\\\"Animal\\\",\\\"Confidence\\\":98.60120391845703},{\\\"Name\\\":\\\"Mammal\\\",\\\"Confidence\\\":98.60120391845703},{\\\"Name\\\":\\\"Cat\\\",\\\"Confidence\\\":98.60120391845703},{\\\"Name\\\":\\\"Siamese\\\",\\\"Confidence\\\":93.0421142578125}]\",\n        \"moderation_labels\": \"[]\",\n        \"vendor\": \"AWS Rekognition\",\n        \"approved\": 1,\n        \"rejected\": 0\n    }\n]"
						}
					]
				}
			],
			"description": "With /images routes you can:\n- Search for any images\n- Itterate through all the images by order DESC or ASC\n- Get individual images\n- Upload your own images\n- Get the results of any analysis performed when the image was uploaded",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Favourites",
			"item": [
				{
					"name": "/favourites",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/favourites?sub_id",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"favourites"
							],
							"query": [
								{
									"key": "sub_id",
									"value": "",
									"description": "[optional] To get the favourites for only the 'sub_id' you used when creating the Favourite via POST /favourites"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/favourites/:favourite_id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/favourites/:favourite_id",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"favourites",
								":favourite_id"
							],
							"variable": [
								{
									"key": "favourite_id",
									"value": "{{favourite_id}}",
									"description": "The id of the individual Favourite you want to get"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/favourites",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"image_id\":\"9ccXTANkb\",\n\t\"sub_id\":\"your-user-1234\"\n}"
						},
						"url": {
							"raw": "{{endpoint}}v1/favourites",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"favourites"
							]
						},
						"description": "\n\n#### POST Body Parameters\n\n| Key  | Required | Description                                                                                     |\n|------|----------|-------------------------------------------------------------------------------------------------|\n| image_id | required | The id of the image to favourite.\n| sub_id | optional | A custom value you can set yourself, and then use to split the results of GET /favourites by, e.g. your own user's id.                                                    |"
					},
					"response": [
						{
							"name": "/favourites - creating a favourite with a sub_id",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{YOUR-API-KEY}}",
										"description": "[required]"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"image_id\":\"9ccXTANkb\",\n\t\"sub_id\": \"my-user-1234\"\n}"
								},
								"url": {
									"raw": "{{endpoint}}v1/favourites",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"favourites"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 08 Nov 2018 10:22:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "X-Response-Time",
									"value": "9ms"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"SUCCESS\",\n    \"id\": 1708\n}"
						},
						{
							"name": "/favourites - saving a favourite to your account without a sub_id",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{YOUR-API-KEY}}",
										"description": "[required]"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"image_id\":\"9ccXTANkb\"\n}"
								},
								"url": {
									"raw": "{{endpoint}}v1/favourites",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"favourites"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 08 Nov 2018 10:23:08 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "X-Response-Time",
									"value": "10ms"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"SUCCESS\",\n    \"id\": 1709\n}"
						}
					]
				},
				{
					"name": "/favourites/:favourite_id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/favourites/:favourite_id",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"favourites",
								":favourite_id"
							],
							"variable": [
								{
									"key": "favourite_id",
									"value": "{{favourite_id}}",
									"description": "The id of the Favourite you want to delete from your account"
								}
							]
						}
					},
					"response": [
						{
							"name": "/favourites/:favourite_id - deleting a favourite from your account",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{YOUR-API-KEY}}",
										"description": "[required]"
									}
								],
								"url": {
									"raw": "{{endpoint}}v1/favourites/:favourite_id",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"favourites",
										":favourite_id"
									],
									"variable": [
										{
											"key": "favourite_id",
											"value": "1709",
											"description": "The id of the Favourite you want to delete from your account"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 08 Nov 2018 10:25:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "X-Response-Time",
									"value": "8ms"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"SUCCESS\"\n}"
						}
					]
				}
			],
			"description": "These routes allow you to Favourite any image, or use a sub_id to favourite images for each of your users.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Votes",
			"item": [
				{
					"name": "/votes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/votes?sub_id",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"votes"
							],
							"query": [
								{
									"key": "sub_id",
									"value": null,
									"description": "[optional] To get the votes for only the 'sub_id' you used when creating the Vote via POST /votes"
								}
							]
						}
					},
					"response": [
						{
							"name": "/votes",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{YOUR-API-KEY}}",
										"description": "[required]"
									}
								],
								"url": {
									"raw": "{{endpoint}}v1/votes?sub_id",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"votes"
									],
									"query": [
										{
											"key": "sub_id",
											"value": null,
											"description": "[optional] To get the votes for only the 'sub_id' you used when creating the Vote via POST /votes"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 18 Nov 2018 11:56:11 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Pagination-Count",
									"value": "5665"
								},
								{
									"key": "Pagination-Page",
									"value": "0"
								},
								{
									"key": "Pagination-Limit",
									"value": "100"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Pagination-Count, Pagination-Page, Pagination-Limit"
								},
								{
									"key": "X-Response-Time",
									"value": "52ms"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 426,\n        \"image_id\": \"c1\",\n        \"sub_id\": \"test\",\n        \"value\": 1\n    },\n    {\n        \"id\": 427,\n        \"image_id\": \"c2\",\n        \"sub_id\": \"test\",\n        \"value\": 1\n    },\n    {\n        \"id\": 31098,\n        \"image_id\": \"43u\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31099,\n        \"image_id\": \"4lo\",\n        \"sub_id\": null,\n        \"value\": 0\n    },\n    {\n        \"id\": 31100,\n        \"image_id\": \"8rm\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31101,\n        \"image_id\": \"8eq\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31102,\n        \"image_id\": \"39i\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31103,\n        \"image_id\": \"3mq\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31104,\n        \"image_id\": \"3c4\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31105,\n        \"image_id\": \"5f1\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31106,\n        \"image_id\": \"9k8\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31107,\n        \"image_id\": \"2dc\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31108,\n        \"image_id\": \"3ne\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31109,\n        \"image_id\": \"7qi\",\n        \"sub_id\": null,\n        \"value\": 0\n    },\n    {\n        \"id\": 31110,\n        \"image_id\": \"5c8\",\n        \"sub_id\": null,\n        \"value\": 0\n    },\n    {\n        \"id\": 31111,\n        \"image_id\": \"6s6\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31112,\n        \"image_id\": \"4jd\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31113,\n        \"image_id\": \"73h\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31114,\n        \"image_id\": \"3j0\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31400,\n        \"image_id\": \"7cu\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31401,\n        \"image_id\": \"1pt\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31402,\n        \"image_id\": \"9n8\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31403,\n        \"image_id\": \"915\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31404,\n        \"image_id\": \"887\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31405,\n        \"image_id\": \"1k6\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31406,\n        \"image_id\": \"11t\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31407,\n        \"image_id\": \"575\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31408,\n        \"image_id\": \"62b\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31409,\n        \"image_id\": \"148\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31411,\n        \"image_id\": \"54s\",\n        \"sub_id\": null,\n        \"value\": 0\n    },\n    {\n        \"id\": 31412,\n        \"image_id\": \"2ha\",\n        \"sub_id\": null,\n        \"value\": 0\n    },\n    {\n        \"id\": 31413,\n        \"image_id\": \"458\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31414,\n        \"image_id\": \"71m\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31415,\n        \"image_id\": \"6gr\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31416,\n        \"image_id\": \"3p4\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31417,\n        \"image_id\": \"6h2\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31418,\n        \"image_id\": \"6ls\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31419,\n        \"image_id\": \"2am\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31420,\n        \"image_id\": \"7ff\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31421,\n        \"image_id\": \"7of\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31422,\n        \"image_id\": \"tv\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31423,\n        \"image_id\": \"a0\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31424,\n        \"image_id\": \"2af\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31425,\n        \"image_id\": \"8h\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31427,\n        \"image_id\": \"1o3\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31428,\n        \"image_id\": \"1hf\",\n        \"sub_id\": null,\n        \"value\": 0\n    },\n    {\n        \"id\": 31429,\n        \"image_id\": \"gq\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31430,\n        \"image_id\": \"4nt\",\n        \"sub_id\": null,\n        \"value\": 0\n    },\n    {\n        \"id\": 31431,\n        \"image_id\": \"325\",\n        \"sub_id\": null,\n        \"value\": 0\n    },\n    {\n        \"id\": 31432,\n        \"image_id\": \"4cu\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31433,\n        \"image_id\": \"4en\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31485,\n        \"image_id\": \"1rk\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31486,\n        \"image_id\": \"s3\",\n        \"sub_id\": null,\n        \"value\": 0\n    },\n    {\n        \"id\": 31487,\n        \"image_id\": \"7da\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31488,\n        \"image_id\": \"kb\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31489,\n        \"image_id\": \"6gi\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31490,\n        \"image_id\": \"qn\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31491,\n        \"image_id\": \"5th\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31492,\n        \"image_id\": \"60t\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31493,\n        \"image_id\": \"2us\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31494,\n        \"image_id\": \"2oa\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31495,\n        \"image_id\": \"5qb\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31496,\n        \"image_id\": \"77q\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31497,\n        \"image_id\": \"8sj\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31498,\n        \"image_id\": \"7ef\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31499,\n        \"image_id\": \"c0\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31500,\n        \"image_id\": \"qg\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31501,\n        \"image_id\": \"27c\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31502,\n        \"image_id\": \"35b\",\n        \"sub_id\": null,\n        \"value\": 0\n    },\n    {\n        \"id\": 31503,\n        \"image_id\": \"2v1\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31504,\n        \"image_id\": \"510\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31505,\n        \"image_id\": \"mq\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31506,\n        \"image_id\": \"cj\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31507,\n        \"image_id\": \"4t2\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31508,\n        \"image_id\": \"3rb\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31509,\n        \"image_id\": \"3q0\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31510,\n        \"image_id\": \"2pq\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31511,\n        \"image_id\": \"61c\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31512,\n        \"image_id\": \"6ur\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31513,\n        \"image_id\": \"396\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31514,\n        \"image_id\": \"8sc\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31515,\n        \"image_id\": \"82e\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31516,\n        \"image_id\": \"7a2\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31517,\n        \"image_id\": \"3cl\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31518,\n        \"image_id\": \"98k\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31519,\n        \"image_id\": \"75c\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31520,\n        \"image_id\": \"4s5\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31521,\n        \"image_id\": \"4m2\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31522,\n        \"image_id\": \"bt\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31523,\n        \"image_id\": \"3l9\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31524,\n        \"image_id\": \"3it\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31525,\n        \"image_id\": \"54j\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31526,\n        \"image_id\": \"1v6\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31527,\n        \"image_id\": \"1j0\",\n        \"sub_id\": null,\n        \"value\": 0\n    },\n    {\n        \"id\": 31528,\n        \"image_id\": \"1eo\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31529,\n        \"image_id\": \"20m\",\n        \"sub_id\": null,\n        \"value\": 0\n    },\n    {\n        \"id\": 31530,\n        \"image_id\": \"31a\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31531,\n        \"image_id\": \"82\",\n        \"sub_id\": null,\n        \"value\": 1\n    },\n    {\n        \"id\": 31532,\n        \"image_id\": \"8ai\",\n        \"sub_id\": null,\n        \"value\": 0\n    },\n    {\n        \"id\": 31533,\n        \"image_id\": \"82\",\n        \"sub_id\": null,\n        \"value\": 1\n    }\n]"
						}
					]
				},
				{
					"name": "/votes/:vote_id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/votes/:vote_id",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"votes",
								":vote_id"
							],
							"variable": [
								{
									"key": "vote_id",
									"value": "{{vote_id}}",
									"description": "The id of the individual Vote you want to get"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/votes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"image_id\":\"ol\",\n\t\"sub_id\": \"my-user-1234\",\n\t\"value\":1\n}"
						},
						"url": {
							"raw": "{{endpoint}}v1/votes",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"votes"
							]
						}
					},
					"response": [
						{
							"name": "/votes - a Down vote for image_id 'asf2'",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{YOUR-API-KEY}}",
										"description": "[required]"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"image_id\":\"asf2\",\n\t\"sub_id\": \"my-user-1234\",\n\t\"value\":0\n}"
								},
								"url": {
									"raw": "{{endpoint}}v1/votes",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"votes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 08 Nov 2018 04:06:15 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "X-Response-Time",
									"value": "27ms"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"SUCCESS\",\n    \"id\": 36491\n}"
						},
						{
							"name": "/votes - an Up vote for image_id 'asf2' with a custom sub_id",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{YOUR-API-KEY}}",
										"description": "[required]"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"image_id\":\"asf2\",\n\t\"sub_id\": \"my-user-1234\",\n\t\"value\":1\n}"
								},
								"url": {
									"raw": "{{endpoint}}v1/votes",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"votes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 08 Nov 2018 04:04:29 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "X-Response-Time",
									"value": "11ms"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"SUCCESS\",\n    \"id\": 36490\n}"
						}
					]
				},
				{
					"name": "/votes/:vote_id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/votes/:vote_id",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"votes",
								":vote_id"
							],
							"variable": [
								{
									"key": "vote_id",
									"value": "",
									"type": "string"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "These routes allow you to Vote any image Up or Down (value=1 or value=0). You can use a sub_id to let each of your users Vote, and get Votes filtered by that sub_id.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "/categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/categories",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"categories"
							]
						},
						"description": "Returns all the available categories to use when search for images via `/v1/images/search` as the 'category_ids' parameter."
					},
					"response": [
						{
							"name": "/categories",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{endpoint}}v1/categories?",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"categories"
									],
									"query": [
										{
											"key": "Content-Type",
											"value": "appli",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Pagination-Count, Pagination-Page, Pagination-Limit",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Aug 2018 15:50:31 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Pagination-Count",
									"value": "11",
									"name": "Pagination-Count",
									"description": "Custom header"
								},
								{
									"key": "Pagination-Limit",
									"value": "1000",
									"name": "Pagination-Limit",
									"description": "Custom header"
								},
								{
									"key": "Pagination-Page",
									"value": "0",
									"name": "Pagination-Page",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Origin",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off",
									"name": "X-DNS-Prefetch-Control",
									"description": "Custom header"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen",
									"name": "X-Download-Options",
									"description": "Custom header"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-Response-Time",
									"value": "4ms",
									"name": "X-Response-Time",
									"description": "Custom header"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "[{\"id\":5,\"name\":\"boxes\"},{\"id\":6,\"name\":\"caturday\"},{\"id\":15,\"name\":\"clothes\"},{\"id\":9,\"name\":\"dream\"},{\"id\":3,\"name\":\"funny\"},{\"id\":1,\"name\":\"hats\"},{\"id\":10,\"name\":\"kittens\"},{\"id\":14,\"name\":\"sinks\"},{\"id\":2,\"name\":\"space\"},{\"id\":4,\"name\":\"sunglasses\"},{\"id\":7,\"name\":\"ties\"}]"
						}
					]
				}
			]
		},
		{
			"name": "Breeds",
			"item": [
				{
					"name": "/breeds",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/breeds?limit=10&page=0",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"breeds"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": [
						{
							"name": "{{endpoint}}v1/breeds",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{endpoint}}v1/breeds?limit=10&page=0",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"breeds"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "338",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 13 May 2018 13:28:57 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Vary",
									"value": "Origin",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "X-Response-Time",
									"value": "28ms",
									"name": "X-Response-Time",
									"description": "Custom header"
								}
							],
							"cookie": [],
							"body": "[{\"id\":1,\"name\":\"Affenpinscher\"},{\"id\":2,\"name\":\"Afghan Hound\"},{\"id\":3,\"name\":\"African Hunting Dog\"},{\"id\":4,\"name\":\"Airedale Terrier\"},{\"id\":5,\"name\":\"Akbash Dog\"},{\"id\":6,\"name\":\"Akita\"},{\"id\":7,\"name\":\"Alapaha Blue Blood Bulldog\"},{\"id\":8,\"name\":\"Alaskan Husky\"},{\"id\":9,\"name\":\"Alaskan Malamute\"},{\"id\":10,\"name\":\"American Bulldog\"}]"
						}
					]
				},
				{
					"name": "/breeds/:breed_id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/breeds/:breed_id",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"breeds",
								":breed_id"
							],
							"variable": [
								{
									"key": "breed_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "/breeds/:breed_id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{endpoint}}v1/breeds/2",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"breeds",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "187",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 19 May 2018 12:51:33 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Vary",
									"value": "Origin",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "X-Response-Time",
									"value": "66ms",
									"name": "X-Response-Time",
									"description": "Custom header"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "localhost",
									"path": "/",
									"secure": false,
									"value": "200003076-0f25be261a93d645f5dc8721dcb7ca9d",
									"key": "addonLicense"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "localhost",
									"path": "/",
									"secure": false,
									"value": "2",
									"key": "addonVariant"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "localhost",
									"path": "/",
									"secure": false,
									"value": "au",
									"key": "addonRegion"
								}
							],
							"body": "{\"id\":2,\"name\":\"Afghan Hound\",\"weight\":\" 50 to 60 pounds\",\"height\":\"25 to 27 inches at the shoulder\",\"life_span\":\"10 to 13 years\",\"bred_for\":\"Coursing and hunting\",\"breed_group\":\"Hound\"}"
						}
					]
				}
			]
		},
		{
			"name": "Sources",
			"item": [
				{
					"name": "/sources",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{endpoint}}v1/sources?limit=10&page=0",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"sources"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": [
						{
							"name": "/sources",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{endpoint}}v1/sources?limit=10&page=0",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"sources"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Pagination-Count",
									"value": "31"
								},
								{
									"key": "Pagination-Page",
									"value": "0"
								},
								{
									"key": "Pagination-Limit",
									"value": "10"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Pagination-Count, Pagination-Page, Pagination-Limit"
								},
								{
									"key": "Cache-Control",
									"value": "public, max-age=12800"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Response-Time",
									"value": "1ms"
								},
								{
									"key": "Content-Length",
									"value": "795"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Dec 2018 05:39:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Wikipedia\",\n        \"url\": \"https://en.wikipedia.org\",\n        \"breed_id\": null\n    },\n    {\n        \"id\": 2,\n        \"name\": \"VCA Hospitals\",\n        \"url\": \"https://vcahospitals.com\",\n        \"breed_id\": null\n    },\n    {\n        \"id\": 3,\n        \"name\": \"VetStreet\",\n        \"url\": \"http://www.vetstreet.com\",\n        \"breed_id\": null\n    },\n    {\n        \"id\": 4,\n        \"name\": \"PetHelpful\",\n        \"url\": \"https://pethelpful.com/\",\n        \"breed_id\": null\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Bengal cat club\",\n        \"url\": \"https://bengalcatclub.com\",\n        \"breed_id\": \"beng\"\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Pet MD\",\n        \"url\": \"https://www.petmd.com\",\n        \"breed_id\": null\n    },\n    {\n        \"id\": 7,\n        \"name\": \"PETAZI\",\n        \"url\": \"https://petazi.com\",\n        \"breed_id\": null\n    },\n    {\n        \"id\": 8,\n        \"name\": \"CatTime\",\n        \"url\": \"https://cattime.com\",\n        \"breed_id\": null\n    },\n    {\n        \"id\": 10,\n        \"name\": \"The Governing Council of the Cat Fancy\",\n        \"url\": \"https://www.gccfcats.org\",\n        \"breed_id\": null\n    },\n    {\n        \"id\": 12,\n        \"name\": \"Hillspet\",\n        \"url\": \"https://www.hillspet.com.au\",\n        \"breed_id\": null\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "version",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "YOUR-API-KEY",
			"value": "example-api-key"
		}
	]
}